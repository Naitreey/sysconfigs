# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# arc-dark theme color variables

# from almost black to ink-ish blue, dark to light
set $base00 #101218
set $base01 #1f222d
set $base02 #252936
set $base10 #353a4c
set $base11 #656e8e
set $base03 #7780a1
# gray-ish to white
set $base04 #C0C5CE
set $base05 #d1d4e0
set $base06 #C9CCDB
set $base07 #ffffff
# pink-ish
set $base08 #c41947
# orange-ish
set $base09 #f99170
set $base0F #fcc09e
# light yellow-ish
set $base0A #ffefcc
# light green-ish
set $base0B #a5ffe1
# light blue-ish
set $base0C #97e0ff
# light purple-ish
set $base0D #97bbf7
# purple-ish
set $base0E #c0b7f9

# workspace definitions
set $ws_music 

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:Ubuntu Mono 12

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# window colors
# <colorclass>          <border> <background> <text> <indicator> <child_border>
client.focused          $base0D  $base0D      $base07 $base11
# focused_inactive is not actually focused, but will receive focus when
# moving focus to its parent container.
client.focused_inactive $base10  $base10      $base03 $base10
client.unfocused        $base01  $base01      $base03 $base01
client.urgent           $base02  $base08      $base07 $base08


# Use Mouse+Alt to drag floating windows to their wanted position
floating_modifier Mod1

# disable focus follow mouse. it cause much trouble with floating windows
focus_follows_mouse no

# start a terminal
bindsym $mod+t exec i3-sensible-terminal

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# use rofi as application launcher
bindsym $mod+Shift+space exec --no-startup-id rofi -show combi

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# focus urgent window
bindsym $mod+x [urgent=latest] focus

# focus last focused window
bindsym $mod+Tab exec i3focus-last --switch

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+semicolon split horizontal
# split in vertical orientation
bindsym $mod+Shift+semicolon split vertical

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+d floating toggle

# change focus between tiling / floating windows
bindsym $mod+d focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
bindsym $mod+n focus child

# toggle sticky floating window
bindsym $mod+y sticky toggle

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace $ws_music
# cycle through workspaces
bindsym $mod+Left workspace prev
bindsym $mod+Right workspace next
# change back-and-forth between two workspaces
bindsym $mod+grave workspace back_and_forth

# move focused container to workspace AND follow focus
bindsym $mod+Shift+1 move container to workspace 1, workspace 1
bindsym $mod+Shift+2 move container to workspace 2, workspace 2
bindsym $mod+Shift+3 move container to workspace 3, workspace 3
bindsym $mod+Shift+4 move container to workspace 4, workspace 4
bindsym $mod+Shift+5 move container to workspace 5, workspace 5
bindsym $mod+Shift+6 move container to workspace 6, workspace 6
bindsym $mod+Shift+7 move container to workspace 7, workspace 7
bindsym $mod+Shift+8 move container to workspace 8, workspace 8
bindsym $mod+Shift+9 move container to workspace 9, workspace 9
bindsym $mod+Shift+0 move container to workspace $ws_music, workspace $ws_music
# move container to prev/next workspace AND follow focus
bindsym $mod+Shift+Left move container to workspace prev, workspace prev
bindsym $mod+Shift+Right move container to workspace next, workspace next
# move container to previously focused workspace AND follow focus
bindsym $mod+Shift+grave move container to workspace back_and_forth, workspace back_and_forth

# move active window to scratch pad, to hide your activity
# to hide all windows in active workspace, use [workspace="__focused__"] filter
bindsym $mod+a move scratchpad
# show scratch pad window
bindsym $mod+Shift+a scratchpad show

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 5 ppt
        bindsym j resize grow height 10 px or 5 ppt
        bindsym k resize shrink height 10 px or 5 ppt
        bindsym l resize grow width 10 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# system mode
set $mode_system (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (p) poweroff
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym p exec --no-startup-id i3exit poweroff, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Pause mode "$mode_system"

# mark window
bindsym $mod+m exec i3-input -F 'mark --replace %s' -P 'Mark: '
# change focus to container with mark
bindsym $mod+apostrophe exec i3-input -F '[con_mark="^%s$"] focus' -P 'Go to mark: '
# move container to marked container
bindsym $mod+Shift+apostrophe exec \
    "i3-input -F 'move container to mark %s; [con_mark=\\"%s\\"] focus' -P 'Move to mark: '"
# swap current container with container of mark
bindsym $mod+Shift+m exec i3-input -F 'swap container with mark %s' -P 'Swap with mark: '
# unmark all windows
bindsym $mod+u unmark
## mark mode
#mode "mark" {
#    # mark window
#    bindsym m exec i3-input -F 'mark --replace %s' -P 'Mark: ', mode "default"
#    # change focus to container with mark
#    bindsym apostrophe exec i3-input -F '[con_mark="^%s$"] focus' -P 'Go to mark: '; mode "default"
#    # move container to marked container
#    bindsym Shift+apostrophe exec \
#        "i3-input -F 'move container to mark %s; [con_mark=\\"%s\\"] focus' -P 'Move to mark: '"; \
#        mode "default"
#    # swap current container with container of mark
#    bindsym Shift+m exec i3-input -F 'swap container with mark %s' -P 'Swap with mark: '; mode "default"
#    # unmark all windows
#    bindsym u unmark; mode "default"
#
#    # back to normal: Enter or Escape
#    bindsym Return mode "default"
#    bindsym Escape mode "default"
#}
#bindsym $mod+m mode "mark"

set $mode_monitor Monitor (p, h, l, c) HDMI-1 position
mode "$mode_monitor" {
    bindsym p exec --no-startup-id xrandr --output HDMI-1 --same-as eDP-1 --auto, mode "default"
    bindsym h exec --no-startup-id xrandr --output HDMI-1 --left-of eDP-1 --auto, mode "default"
    bindsym l exec --no-startup-id xrandr --output HDMI-1 --right-of eDP-1 --auto, mode "default"
    bindsym c exec --no-startup-id xrandr --output HDMI-1 --auto --off, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+o mode "$mode_monitor"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    font pango:Noto Sans, FontAwesome 14
    status_command i3blocks
    position bottom
    # i3bar_command
    # status_command
    colors {
        background $base01
        separator  $base03
        statusline $base05
        # <colorclass>     <border> <background> <text>
        focused_workspace  $base0C  $base0D      $base00
        urgent_workspace   $base08  $base08      $base07
        # active workspace is when active on current monitor, but focus
        # on another monitor
        active_workspace   $base02  $base02      $base07
        inactive_workspace $base01  $base01      $base03
    }
}

# multimedia
# volumes controls
bindsym XF86AudioRaiseVolume exec --no-startup-id volume-control up
bindsym XF86AudioLowerVolume exec --no-startup-id volume-control down
bindsym XF86AudioMute exec --no-startup-id volume-control toggle-mute
# player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# screenshot
bindsym --release $mod+Print exec scrot -s /tmp/screenshot.png

# windows that float by default:
# system settings
# shadowsocks 
for_window [class="systemsettings|shadowsocks-qt5|Enpass-Desktop"] floating enable

# spotify does not assign WM_CLASS early enough at startup
for_window [class="Spotify"] move to workspace $ws_music

# gaps configurations
for_window [class=".*"] border pixel 1
gaps inner 5
gaps outer 5

# startup applications
# compton compositor, firstly kill existing compton then re-start on all monitors
exec_always --no-startup-id "pkill compton; exec compton --config ~/.config/compton.conf -d :0"
# restore wallpaper set by nitrogen
exec --no-startup-id nitrogen --restore
# dunst notification daemon
exec --no-startup-id dunst
# start desktop autostart programs
exec --no-startup-id dex -ae i3
# focus last-focused window watcher, use exec_always because the program will
# exit when ipc_shutdown event is fired, no matter it's restart or exit.
# So weird as shutdown event with restart/exit reason is merged in code,
# but seems not working correctly and i3ipc-python library treats shutdown
# event different from normal ones.
exec_always --no-startup-id i3focus-last
# inupt device configs, no window is needed
exec --no-startup-id startup-config
# cvim server
exec --no-startup-id cvim_server.py
